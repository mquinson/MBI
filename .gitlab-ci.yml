# Use our own docker image, that was generated and pushed with the following commands:
#   docker login registry.gitlab.inria.fr
#   docker build -t registry.gitlab.inria.fr/quinson/mbi2 .
#   docker push registry.gitlab.inria.fr/quinson/mbi2
# image: registry.gitlab.com/mwapl/benchmarking-mpi:latest
# image: registry.gitlab.inria.fr/quinson/mbi2:latest
image: registry.hub.docker.com/mquinson/mbi


variables:
    GIT_SUBMODULE_STRATEGY: none

stages:
    - build
    - test
    - gather # For the tests that are split in several jobs (ISP, MUST, CIVL), rerun them all in one
    - deploy
    
old-logs:
    stage: build
    needs: []
    script:
        - apt update ; apt install -y p7zip wget
        - wget https://gitlab.com/MpiBugsInitiative/MpiBugsInitiative/uploads/2e4844fe38cac48cd7051d86c0521930/logs-220331.7z
        - 7zr x -so logs-*.7z | tar xf -
    artifacts:
        untracked: false
        paths:
            - logs

test-civl-hermes-must:
    stage: test
    needs:
        - job: old-logs
          artifacts: true
    before_script:
        - apt-get install -y psmisc
    script:
        - rm -rf builds; ln -s /MBI/builds .
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x civl
        - scripts/ensure_python3 ./MBI.py -x hermes
        - scripts/ensure_python3 ./MBI.py -x must
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/civl
            - logs/hermes
            - logs/must
test-aislinn:
    stage: test
    image: ubuntu:18.04
    needs:
        - job: old-logs
          artifacts: true
    script:
        - mkdir -p builds/aislinn
        - rm -rf builds; ln -s /MBI/builds .
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x aislinn
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/aislinn

# MPI-SV refuses to build on nested virtualization as we have when using docker on gitlab-CI
#test-mpisv:
#    stage: test
#    image: mpisv/mpi-sv
#    needs: []
#    script:
#        - rm -rf builds; ln -s /MBI/builds .
#        - scripts/ensure_python3 ./MBI.py -c generate
#        - scripts/ensure_python3 ./MBI.py -x mpisv
#    artifacts:
#        untracked: false
#        when: always
#        paths:
#            - logs/mpisv

test-simgrid-parcoach-isp:
    stage: test
    needs:
        - job: old-logs
          artifacts: true
    script:
        - rm -rf builds; ln -s /MBI/builds .
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x parcoach
        - scripts/ensure_python3 ./MBI.py -x simgrid
        - scripts/ensure_python3 ./MBI.py -x smpi
        - scripts/ensure_python3 ./MBI.py -x smpivg
        - scripts/ensure_python3 ./MBI.py -x isp -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/simgrid
            - logs/parcoach
            - logs/smpi
            - logs/smpivg
            - logs/isp

test-itac:
    stage: test
    needs:
        - job: old-logs
          artifacts: true
    script:
        - rm -rf builds; ln -s /MBI/builds .
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x itac -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/itac

pages:
    stage: deploy
    when: always
    needs:
        - job: test-civl-hermes-must
          artifacts: true
        - job: test-simgrid-parcoach-isp
          artifacts: true
        - job: test-aislinn
          artifacts: true
        - job: test-itac
          artifacts: true
    before_script:
        - apt update; apt install -y p7zip-full texlive-latex-base texlive-latex-extra texlive-pictures
    script:
        - rm -rf builds gencodes /MBI/gencodes; ln -s /MBI/builds . ; ls -s /MBI/gencodes .
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -c html
        - scripts/ensure_python3 ./MBI.py -c latex
        - cd scripts ; ./tools/gen_latex.py ; cd ..
        - cd latex ; pdflatex -batch dashboard.tex ; cd ..
        - pwd ; ls
        - mkdir public
        - tar cf - --exclude '*.bc' --exclude '*.stf*' --exclude '*.ktest' logs | 7z a -si -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on public/logs.tar.7z
        - cp -r *.html gencodes img logs public/
    artifacts:
        untracked: false
        when: always
        paths:
            - public
            - logs
            - latex
