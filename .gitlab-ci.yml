# Use our own docker image, that was generated and pushed with the following commands:
#   docker login registry.gitlab.inria.fr
#   docker build -t registry.gitlab.inria.fr/quinson/mbi2 .
#   docker push registry.gitlab.inria.fr/quinson/mbi2
# image: registry.gitlab.com/mwapl/benchmarking-mpi:latest
image: registry.gitlab.inria.fr/quinson/mbi2:latest
# image: registry.hub.docker.com/mquinson/mbi


variables:
    GIT_SUBMODULE_STRATEGY: none
    MBI_CLEANUP: "Name of the tool for which the logs must be wiped out (at most one in parcoach, simgrid, smpi, smpivg)"

stages:
    - test
    - deploy
    
test-must:
    stage: test
    needs: []
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x must -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/must
test-aislinn:
    stage: test
    image: ubuntu:18.04
    needs: []
    script:
        - apt-get update; apt-get install -y p7zip p7zip-full wget
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x aislinn -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/aislinn
test-hermes:
    stage: test
    needs: []
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x hermes -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/hermes

#test-mpisv:
#    stage: test
#    image: mpisv/mpi-sv
#    needs: []
#    script:
#        - apt-get update; apt-get install -y p7zip p7zip-full wget
#        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
#        - 7zr x -so logs*.7z | tar xf -
#        - scripts/ensure_python3 ./MBI.py -c generate
#        - scripts/ensure_python3 ./MBI.py -x mpisv -c run
#    artifacts:
#        untracked: false
#        when: always
#        paths:
#            - logs/mpisv

test-civl:
    stage: test
    needs: []
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - if [ "x$MBI_CLEANUP" = "xcivl" ] ; then echo "XXX Remove all logs"; rm -rf logs/civl; fi
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x civl -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/civl
test-parcoach:
    stage: test
    needs: []
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - if [ "x$MBI_CLEANUP" = "xparcoach" ] ; then echo "XXX Remove all logs"; rm -rf logs/parcoach; fi
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x parcoach -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/parcoach
test-simgrid:
    stage: test
    needs: []
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - if [ "x$MBI_CLEANUP" = "xsimgrid" ] ; then echo "XXX Remove all logs"; rm -rf logs/simgrid; fi
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x simgrid -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/simgrid
test-smpi:
    stage: test
    needs: []
    allow_failure: true
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - if [ "x$MBI_CLEANUP" = "xsmpi" ] ; then echo "XXX Remove all logs"; rm -rf logs/smpi; fi
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x smpi -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/smpi
test-smpivg:
    stage: test
    needs: []
    allow_failure: true
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - if [ "x$MBI_CLEANUP" = "xsmpivg" ] ; then echo "XXX Remove all logs"; rm -rf logs/smpivg; fi
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x smpivg -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/smpivg

#test-itac:
#    stage: test
#    needs: []
#    script:
#        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
#        - 7zr x -so logs*.7z | tar xf -
#        - scripts/ensure_python3 ./MBI.py -c generate
#        - scripts/ensure_python3 ./MBI.py -x itac -c run
#    artifacts:
#        untracked: false
#        when: always
#        paths:
#            - logs/itac

test-isp:
    stage: test
    needs: []
    script:
        - wget https://gitlab.inria.fr/quinson/mbi2/-/jobs/artifacts/master/raw/public/logs.tar.7z?job=pages -O logs.tar.7z
        - 7zr x -so logs*.7z | tar xf -
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -x isp -c run
    artifacts:
        untracked: false
        when: always
        paths:
            - logs/isp

latex:
    stage: deploy
    when: always
    allow_failure: true
    needs:
        - job: test-must
          artifacts: true
        - job: test-aislinn
          artifacts: true
        - job: test-civl
          artifacts: true
        - job: test-hermes
          artifacts: true
        - job: test-parcoach
          artifacts: true
#        - job: test-mpisv
#          artifacts: true
        - job: test-simgrid
          artifacts: true
        - job: test-smpi
          artifacts: true
        - job: test-smpivg
          artifacts: true
#        - job: test-itac
#          artifacts: true
        - job: test-isp
          artifacts: true
    script:
        - apt update ; apt -y install texlive-latex-base texlive-latex-extra texlive-pictures
        - rm -rf gencodes /MBI/gencodes
        - scripts/ensure_python3 ./MBI.py -c generate
        - ln -s /MBI/gencodes .
        - scripts/ensure_python3 ./MBI.py -c latex
        - cd scripts ; ./ensure_python3 ./tools/gen_latex.py ; cd ..
        - cd latex ; pdflatex -batch dashboard.tex ; cd ..
    artifacts:
        untracked: false
        when: always
        paths:
            - latex

pages:
    stage: deploy
    when: always
    needs:
        - job: test-must
          artifacts: true
        - job: test-aislinn
          artifacts: true
        - job: test-hermes
          artifacts: true
        - job: test-civl
          artifacts: true
        - job: test-parcoach
          artifacts: true
#        - job: test-mpisv
#          artifacts: true
        - job: test-simgrid
          artifacts: true
        - job: test-smpi
          artifacts: true
        - job: test-smpivg
          artifacts: true
#        - job: test-itac
#          artifacts: true
        - job: test-isp
          artifacts: true
    script:
        - rm -rf gencodes /MBI/gencodes
        - scripts/ensure_python3 ./MBI.py -c generate
        - scripts/ensure_python3 ./MBI.py -c html
        - pwd ; ls
        - mkdir public
        - tar cf - --exclude '*.bc' --exclude '*.stf*' --exclude '*.ktest' logs | 7z a -si -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on public/logs.tar.7z
        - cp -r *.html /MBI/gencodes img logs public/
    artifacts:
        untracked: false
        when: always
        paths:
            - public
            - logs
